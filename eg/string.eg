!
!  EG\STRING. Generate example Orson string tokens.
!
!  Copyright © 2014 James B. Moen.
!
!  This  program is free  software: you  can redistribute  it and/or  modify it
!  under the terms  of the GNU General Public License as  published by the Free
!  Software Foundation,  either version 3 of  the License, or  (at your option)
!  any later version.
!
!  This program is distributed in the  hope that it will be useful, but WITHOUT
!  ANY  WARRANTY;  without even  the  implied  warranty  of MERCHANTABILITY  or
!  FITNESS FOR  A PARTICULAR PURPOSE.  See  the GNU General  Public License for
!  more details.
!
!  You should have received a copy of the GNU General Public License along with
!  this program.  If not, see <http://www.gnu.org/licenses/>.
!

!  This was used to debug the BNF grammar for Orson string tokens. An allegedly
!  tricky part is that a string token can contain single apostrophes, but can't
!  contain two adjacent apostrophes. This means string tokens like ''Joneses'',
!  ''Jones's'' and ''Jones''' are well formed, and so is '''''.

        start → stringLiteral.

stringLiteral →  "''" optString "''" optApostrophe.
    optString → empty | character optString | "'" character optString.
optApostrophe → empty | "'".
        empty → "".
    character → "c".
